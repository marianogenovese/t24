//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Integra.Vision.Engine.Configuration
{
    
    
    /// <summary>
    /// The EngineConfigurationSection Configuration Section.
    /// </summary>
    internal partial class EngineConfigurationSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the EngineConfigurationSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string EngineConfigurationSectionSectionName = "engineConfigurationSection";
        
        /// <summary>
        /// The XML path of the EngineConfigurationSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string EngineConfigurationSectionSectionPath = "EngineConfigurationSectionGroup/engineConfigurationSection";
        
        /// <summary>
        /// Gets the EngineConfigurationSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public static global::Integra.Vision.Engine.Configuration.EngineConfigurationSection Instance
        {
            get
            {
                return ((global::Integra.Vision.Engine.Configuration.EngineConfigurationSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.EngineConfigurationSectionSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Listener Property
        /// <summary>
        /// The XML name of the <see cref="Listener"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ListenerPropertyName = "listener";
        
        /// <summary>
        /// Gets or sets the Listener.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Listener.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.ListenerPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Integra.Vision.Engine.Configuration.ListenerConfigurationElement Listener
        {
            get
            {
                return ((global::Integra.Vision.Engine.Configuration.ListenerConfigurationElement)(base[global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.ListenerPropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.ListenerPropertyName] = value;
            }
        }
        #endregion
        
        #region Database Property
        /// <summary>
        /// The XML name of the <see cref="Database"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DatabasePropertyName = "database";
        
        /// <summary>
        /// Gets or sets the Database.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Database.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.DatabasePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Integra.Vision.Engine.Configuration.DatabaseConfigurationElement Database
        {
            get
            {
                return ((global::Integra.Vision.Engine.Configuration.DatabaseConfigurationElement)(base[global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.DatabasePropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.DatabasePropertyName] = value;
            }
        }
        #endregion
        
        #region Operation Property
        /// <summary>
        /// The XML name of the <see cref="Operation"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string OperationPropertyName = "operation";
        
        /// <summary>
        /// Gets or sets the Operation.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Operation.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.OperationPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Integra.Vision.Engine.Configuration.OperationConfigurationElement Operation
        {
            get
            {
                return ((global::Integra.Vision.Engine.Configuration.OperationConfigurationElement)(base[global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.OperationPropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.OperationPropertyName] = value;
            }
        }
        #endregion
        
        #region Concurrency Property
        /// <summary>
        /// The XML name of the <see cref="Concurrency"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ConcurrencyPropertyName = "concurrency";
        
        /// <summary>
        /// Gets or sets the Concurrency.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Concurrency.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.ConcurrencyPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Integra.Vision.Engine.Configuration.ConcurrencyConfigurationElement Concurrency
        {
            get
            {
                return ((global::Integra.Vision.Engine.Configuration.ConcurrencyConfigurationElement)(base[global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.ConcurrencyPropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.ConcurrencyPropertyName] = value;
            }
        }
        #endregion
        
        #region BufferManagement Property
        /// <summary>
        /// The XML name of the <see cref="BufferManagement"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string BufferManagementPropertyName = "bufferManagement";
        
        /// <summary>
        /// Gets or sets the BufferManagement.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The BufferManagement.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.BufferManagementPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Integra.Vision.Engine.Configuration.BufferManagmentConfigurationElement BufferManagement
        {
            get
            {
                return ((global::Integra.Vision.Engine.Configuration.BufferManagmentConfigurationElement)(base[global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.BufferManagementPropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Configuration.EngineConfigurationSection.BufferManagementPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Configuration
{
    
    
    /// <summary>
    /// A collection of EndpointConfigurationElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap, AddItemName="endpoint", RemoveItemName="remove", ClearItemsName="clear")]
    internal partial class EndpointConfigurationElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string EndpointConfigurationElementPropertyName = "endpointConfigurationElement";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::Integra.Vision.Engine.Configuration.EndpointConfigurationElementCollection.EndpointConfigurationElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Integra.Vision.Engine.Configuration.EndpointConfigurationElementCollection.EndpointConfigurationElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement this[int index]
        {
            get
            {
                return ((global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement this[object name]
        {
            get
            {
                return ((global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="endpointConfigurationElement">The <see cref="global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement endpointConfigurationElement)
        {
            base.BaseAdd(endpointConfigurationElement);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="endpointConfigurationElement">The <see cref="global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement endpointConfigurationElement)
        {
            base.BaseRemove(this.GetElementKey(endpointConfigurationElement));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement GetItemAt(int index)
        {
            return ((global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement GetItemByKey(string name)
        {
            return ((global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Configuration
{
    
    
    /// <summary>
    /// The EndpointConfigurationElement Configuration Element.
    /// </summary>
    internal partial class EndpointConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement.NamePropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Address Property
        /// <summary>
        /// The XML name of the <see cref="Address"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string AddressPropertyName = "address";
        
        /// <summary>
        /// Gets the Address.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Address.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.CallbackValidatorAttribute(Type=typeof(global::Integra.Vision.Engine.Configuration.AddressValidatorCallbackValidatorClass), CallbackMethodName="ValidateAddressCallback")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement.AddressPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Address
        {
            get
            {
                return ((string)(base[global::Integra.Vision.Engine.Configuration.EndpointConfigurationElement.AddressPropertyName]));
            }
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Configuration
{
    
    
    /// <summary>
    /// The ListenerConfigurationElement Configuration Element.
    /// </summary>
    internal partial class ListenerConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Endpoints Property
        /// <summary>
        /// The XML name of the <see cref="Endpoints"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string EndpointsPropertyName = "endpoints";
        
        /// <summary>
        /// Gets or sets the Endpoints.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Endpoints.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.ListenerConfigurationElement.EndpointsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Integra.Vision.Engine.Configuration.EndpointConfigurationElementCollection Endpoints
        {
            get
            {
                return ((global::Integra.Vision.Engine.Configuration.EndpointConfigurationElementCollection)(base[global::Integra.Vision.Engine.Configuration.ListenerConfigurationElement.EndpointsPropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Configuration.ListenerConfigurationElement.EndpointsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Configuration
{
    
    
    /// <summary>
    /// The DatabaseConfigurationElement Configuration Element.
    /// </summary>
    internal partial class DatabaseConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region ConnectionString Property
        /// <summary>
        /// The XML name of the <see cref="ConnectionString"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ConnectionStringPropertyName = "connectionString";
        
        /// <summary>
        /// Gets or sets the ConnectionString.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The ConnectionString.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.DatabaseConfigurationElement.ConnectionStringPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string ConnectionString
        {
            get
            {
                return ((string)(base[global::Integra.Vision.Engine.Configuration.DatabaseConfigurationElement.ConnectionStringPropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Configuration.DatabaseConfigurationElement.ConnectionStringPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Configuration
{
    
    
    /// <summary>
    /// The OperationConfigurationElement Configuration Element.
    /// </summary>
    internal partial class OperationConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Actions Property
        /// <summary>
        /// The XML name of the <see cref="Actions"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ActionsPropertyName = "actions";
        
        /// <summary>
        /// Gets or sets the Actions.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Actions.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.OperationConfigurationElement.ActionsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Integra.Vision.Engine.Configuration.CommandConfigurationElementCollection Actions
        {
            get
            {
                return ((global::Integra.Vision.Engine.Configuration.CommandConfigurationElementCollection)(base[global::Integra.Vision.Engine.Configuration.OperationConfigurationElement.ActionsPropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Configuration.OperationConfigurationElement.ActionsPropertyName] = value;
            }
        }
        #endregion
        
        #region Dispatcher Property
        /// <summary>
        /// The XML name of the <see cref="Dispatcher"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DispatcherPropertyName = "dispatcher";
        
        /// <summary>
        /// Gets or sets the Dispatcher.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Dispatcher.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.OperationConfigurationElement.DispatcherPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Integra.Vision.Engine.Configuration.FilterConfigurationElementCollection Dispatcher
        {
            get
            {
                return ((global::Integra.Vision.Engine.Configuration.FilterConfigurationElementCollection)(base[global::Integra.Vision.Engine.Configuration.OperationConfigurationElement.DispatcherPropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Configuration.OperationConfigurationElement.DispatcherPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Configuration
{
    
    
    /// <summary>
    /// A collection of FilterConfigurationElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Integra.Vision.Engine.Configuration.FilterConfigurationElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap, AddItemName="filter", RemoveItemName="remove", ClearItemsName="clear")]
    internal partial class FilterConfigurationElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string FilterConfigurationElementPropertyName = "filterConfigurationElementCollection";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::Integra.Vision.Engine.Configuration.FilterConfigurationElementCollection.FilterConfigurationElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Integra.Vision.Engine.Configuration.FilterConfigurationElementCollection.FilterConfigurationElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Integra.Vision.Engine.Configuration.FilterConfigurationElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Integra.Vision.Engine.Configuration.FilterConfigurationElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Configuration.FilterConfigurationElement this[int index]
        {
            get
            {
                return ((global::Integra.Vision.Engine.Configuration.FilterConfigurationElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Configuration.FilterConfigurationElement this[object name]
        {
            get
            {
                return ((global::Integra.Vision.Engine.Configuration.FilterConfigurationElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="filterConfigurationElementCollection">The <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::Integra.Vision.Engine.Configuration.FilterConfigurationElement filterConfigurationElementCollection)
        {
            base.BaseAdd(filterConfigurationElementCollection);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="filterConfigurationElementCollection">The <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::Integra.Vision.Engine.Configuration.FilterConfigurationElement filterConfigurationElementCollection)
        {
            base.BaseRemove(this.GetElementKey(filterConfigurationElementCollection));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Configuration.FilterConfigurationElement GetItemAt(int index)
        {
            return ((global::Integra.Vision.Engine.Configuration.FilterConfigurationElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Configuration.FilterConfigurationElement GetItemByKey(string name)
        {
            return ((global::Integra.Vision.Engine.Configuration.FilterConfigurationElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Configuration
{
    
    
    /// <summary>
    /// The FilterConfigurationElement Configuration Element.
    /// </summary>
    internal partial class FilterConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.FilterConfigurationElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Integra.Vision.Engine.Configuration.FilterConfigurationElement.NamePropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Configuration.FilterConfigurationElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Type Property
        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.FilterConfigurationElement.TypePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Type
        {
            get
            {
                return ((string)(base[global::Integra.Vision.Engine.Configuration.FilterConfigurationElement.TypePropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Configuration.FilterConfigurationElement.TypePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Configuration
{
    
    
    /// <summary>
    /// The ConcurrencyConfigurationElement Configuration Element.
    /// </summary>
    internal partial class ConcurrencyConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Level Property
        /// <summary>
        /// The XML name of the <see cref="Level"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LevelPropertyName = "level";
        
        /// <summary>
        /// Gets or sets the Level.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Level.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.ConcurrencyConfigurationElement.LevelPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int Level
        {
            get
            {
                return ((int)(base[global::Integra.Vision.Engine.Configuration.ConcurrencyConfigurationElement.LevelPropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Configuration.ConcurrencyConfigurationElement.LevelPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Configuration
{
    
    
    /// <summary>
    /// A collection of CommandConfigurationElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Integra.Vision.Engine.Configuration.CommandConfigurationElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap, AddItemName="add", RemoveItemName="remove", ClearItemsName="clear")]
    internal partial class CommandConfigurationElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Integra.Vision.Engine.Configuration.CommandConfigurationElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string CommandConfigurationElementPropertyName = "commandConfigurationElement";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::Integra.Vision.Engine.Configuration.CommandConfigurationElementCollection.CommandConfigurationElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Integra.Vision.Engine.Configuration.CommandConfigurationElementCollection.CommandConfigurationElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Integra.Vision.Engine.Configuration.CommandConfigurationElement)(element)).CommandType;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Integra.Vision.Engine.Configuration.CommandConfigurationElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Integra.Vision.Engine.Configuration.CommandConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Integra.Vision.Engine.Configuration.CommandConfigurationElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Configuration.CommandConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Integra.Vision.Engine.Configuration.CommandConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Configuration.CommandConfigurationElement this[int index]
        {
            get
            {
                return ((global::Integra.Vision.Engine.Configuration.CommandConfigurationElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Configuration.CommandConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="commandType">The key of the <see cref="global::Integra.Vision.Engine.Configuration.CommandConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Configuration.CommandConfigurationElement this[object commandType]
        {
            get
            {
                return ((global::Integra.Vision.Engine.Configuration.CommandConfigurationElement)(base.BaseGet(commandType)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Integra.Vision.Engine.Configuration.CommandConfigurationElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="commandConfigurationElement">The <see cref="global::Integra.Vision.Engine.Configuration.CommandConfigurationElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::Integra.Vision.Engine.Configuration.CommandConfigurationElement commandConfigurationElement)
        {
            base.BaseAdd(commandConfigurationElement);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Integra.Vision.Engine.Configuration.CommandConfigurationElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="commandConfigurationElement">The <see cref="global::Integra.Vision.Engine.Configuration.CommandConfigurationElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::Integra.Vision.Engine.Configuration.CommandConfigurationElement commandConfigurationElement)
        {
            base.BaseRemove(this.GetElementKey(commandConfigurationElement));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Configuration.CommandConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Integra.Vision.Engine.Configuration.CommandConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Configuration.CommandConfigurationElement GetItemAt(int index)
        {
            return ((global::Integra.Vision.Engine.Configuration.CommandConfigurationElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Configuration.CommandConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="commandType">The key of the <see cref="global::Integra.Vision.Engine.Configuration.CommandConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Configuration.CommandConfigurationElement GetItemByKey(string commandType)
        {
            return ((global::Integra.Vision.Engine.Configuration.CommandConfigurationElement)(base.BaseGet(((object)(commandType)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Custom Child Elements
        /// <summary>
        /// Gets a value indicating whether an unknown element is encountered during deserialization.
        /// </summary>
        /// <param name="elementName">The name of the unknown subelement.</param>
        /// <param name="reader">The <see cref="global::System.Xml.XmlReader"/> being used for deserialization.</param>
        /// <returns>
        /// <see langword="true"/> when an unknown element is encountered while deserializing; otherwise, <see langword="false"/>.
        /// </returns>
        /// <exception cref="global::System.Configuration.ConfigurationErrorsException">The element identified by <paramref name="elementName"/> is locked.- or -One or more of the element's attributes is locked.- or -<paramref name="elementName"/> is unrecognized, or the element has an unrecognized attribute.- or -The element has a Boolean attribute with an invalid value.- or -An attempt was made to deserialize a property more than once.- or -An attempt was made to deserialize a property that is not a valid member of the element.- or -The element cannot contain a CDATA or text element.</exception>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool OnDeserializeUnrecognizedElement(string elementName, global::System.Xml.XmlReader reader)
        {
            // IMPORTANT NOTE: The code below does not build by default.
            // You have indicated that this configuration element has
            // custom child elements. Copy the commented code below to
            // a separate file and implement the method.
            // 
            // internal partial class CommandConfigurationElementCollection
            // {
            //     
            //     private bool HandleUnrecognizedElement(string elementName, global::System.Xml.XmlReader reader)
            //     {
            //         throw new global::System.NotImplementedException();
            //     }
            // }
            // 
            return this.HandleUnrecognizedElement(elementName, reader);
            // REMEMBER: The method above does NOT exist until you implement it in a partial class as intstructed.
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Configuration
{
    
    
    /// <summary>
    /// A collection of FilterConfigurationElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Integra.Vision.Engine.Configuration.FilterConfigurationElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap, AddItemName="filter", RemoveItemName="remove", ClearItemsName="clear")]
    internal partial class CommandConfigurationElement : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string FilterConfigurationElementPropertyName = "filterConfigurationElement";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::Integra.Vision.Engine.Configuration.CommandConfigurationElement.FilterConfigurationElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Integra.Vision.Engine.Configuration.CommandConfigurationElement.FilterConfigurationElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Integra.Vision.Engine.Configuration.FilterConfigurationElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Integra.Vision.Engine.Configuration.FilterConfigurationElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Configuration.FilterConfigurationElement this[int index]
        {
            get
            {
                return ((global::Integra.Vision.Engine.Configuration.FilterConfigurationElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Configuration.FilterConfigurationElement this[object name]
        {
            get
            {
                return ((global::Integra.Vision.Engine.Configuration.FilterConfigurationElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="filterConfigurationElement">The <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::Integra.Vision.Engine.Configuration.FilterConfigurationElement filterConfigurationElement)
        {
            base.BaseAdd(filterConfigurationElement);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="filterConfigurationElement">The <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::Integra.Vision.Engine.Configuration.FilterConfigurationElement filterConfigurationElement)
        {
            base.BaseRemove(this.GetElementKey(filterConfigurationElement));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Configuration.FilterConfigurationElement GetItemAt(int index)
        {
            return ((global::Integra.Vision.Engine.Configuration.FilterConfigurationElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Integra.Vision.Engine.Configuration.FilterConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Configuration.FilterConfigurationElement GetItemByKey(string name)
        {
            return ((global::Integra.Vision.Engine.Configuration.FilterConfigurationElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region CommandType Property
        /// <summary>
        /// The XML name of the <see cref="CommandType"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string CommandTypePropertyName = "commandType";
        
        /// <summary>
        /// Gets or sets the CommandType.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The CommandType.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.CommandConfigurationElement.CommandTypePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string CommandType
        {
            get
            {
                return ((string)(base[global::Integra.Vision.Engine.Configuration.CommandConfigurationElement.CommandTypePropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Configuration.CommandConfigurationElement.CommandTypePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Configuration
{
    
    
    /// <summary>
    /// The BufferManagmentConfigurationElement Configuration Element.
    /// </summary>
    public partial class BufferManagmentConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region MaxBufferPoolSize Property
        /// <summary>
        /// The XML name of the <see cref="MaxBufferPoolSize"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MaxBufferPoolSizePropertyName = "maxBufferPoolSize";
        
        /// <summary>
        /// Gets or sets the MaxBufferPoolSize.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The MaxBufferPoolSize.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.BufferManagmentConfigurationElement.MaxBufferPoolSizePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual long MaxBufferPoolSize
        {
            get
            {
                return ((long)(base[global::Integra.Vision.Engine.Configuration.BufferManagmentConfigurationElement.MaxBufferPoolSizePropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Configuration.BufferManagmentConfigurationElement.MaxBufferPoolSizePropertyName] = value;
            }
        }
        #endregion
        
        #region MaxBufferSize Property
        /// <summary>
        /// The XML name of the <see cref="MaxBufferSize"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MaxBufferSizePropertyName = "maxBufferSize";
        
        /// <summary>
        /// Gets or sets the MaxBufferSize.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The MaxBufferSize.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Configuration.BufferManagmentConfigurationElement.MaxBufferSizePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int MaxBufferSize
        {
            get
            {
                return ((int)(base[global::Integra.Vision.Engine.Configuration.BufferManagmentConfigurationElement.MaxBufferSizePropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Configuration.BufferManagmentConfigurationElement.MaxBufferSizePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Configuration
{
    
    
    /// <summary>
    /// Class for the AddressValidator callback validator
    /// </summary>
    public partial class AddressValidatorCallbackValidatorClass
    {
        
        /// <summary>
        /// Validation callback for the AddressValidator callback validator
        /// </summary>
        /// <param name="value">The value to validate.</param>
        /// <exception cref="global::System.ArgumentException">The value was not valid.</exception>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public static void ValidateAddressCallback(object value)
        {
            // IMPORTANT NOTE: The code below does not build by default.
            // You have placed a callback validator on this property.
            // Copy the commented code below to a separate file and 
            // implement the method.
            // 
            // public partial class AddressValidatorCallbackValidatorClass
            // {
            //     
            //     public static void ValidateAddress(object value)
            //     {
            //         throw new global::System.NotImplementedException();
            //     }
            // }
            // 
            global::Integra.Vision.Engine.Configuration.AddressValidatorCallbackValidatorClass.ValidateAddress(value);
        }
    }
}

<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <sectionGroup name="integra.vision.engine" type="System.Configuration.ConfigurationSectionGroup, System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
      <section name="hosting" type="Integra.Vision.Engine.Host.Configuration.HostingConfigurationSection, Integra.Vision.Engine.Host, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
    </sectionGroup>
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <system.diagnostics>
    <trace autoflush="true"></trace>
    <sources>
      <source name="Integra.Vision.Engine.Host" switchValue="Verbose">
        <listeners>
          <remove name="Default" />
          <add name="Console" />
          <add name="File" />
        </listeners>
      </source>
      <source name="System.ServiceModel" switchValue="Error">
        <listeners>
          <add name="wcf" type="System.Diagnostics.XmlWriterTraceListener" initializeData= "c:\CommandListener.svclog" />
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" switchValue="Error">
        <listeners>
          <add name="wcf" type="System.Diagnostics.XmlWriterTraceListener" initializeData= "c:\CommandListener.svclog" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add name="Console" type="Integra.Vision.Engine.Host.Diagnostics.ConsoleTraceListener, Integra.Vision.Engine.Host"  traceOutputOptions = "ProcessId, DateTime" />
      <add name="File" type="System.Diagnostics.TextWriterTraceListener" traceOutputOptions = "ProcessId, DateTime" initializeData="Integra.Vision.Engine.Host.log"  />
    </sharedListeners>
  </system.diagnostics>
  <!--****************** CONFIGURACION PRIVADA NO TOCAR ******************-->
  <!--
      El modulo de hosting usa un inyector de dependencias para construir en tiempo de ejecución el motor.
      Por lo tanto hay que registrar siempre la cadena de modulos que se usarán en el orden que iniciarán
      y buscarán sus dependencias para así iniciar automaticamente el sistema.
      
      Todos los modulos registrados aqui son de uso interno y privado.
  -->
  <integra.vision.engine>
    <hosting>
      <!--Se definen los componentes a usar-->
      <bootstrap engineBuilderType="Integra.Vision.Engine.Core.IEngineBuilder, Integra.Vision.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <module name="engine" type="Integra.Vision.Engine.Core.EngineModuleBuilder, Integra.Vision.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
        <module name="dispatcher" type="Integra.Vision.Engine.Core.OperationDispatcherModuleBuilder, Integra.Vision.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
        <module name="scheduler" type="Integra.Vision.Engine.Core.OperationSchedulerModuleBuilder, Integra.Vision.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
        <module name="boot" type="Integra.Vision.Engine.Core.BootEngineModuleBuilder, Integra.Vision.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
        <module name="server" type="Integra.Vision.Engine.Core.CommandServerModuleBuilder, Integra.Vision.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
      </bootstrap>
    </hosting>
  </integra.vision.engine>
  <runtime>
    <!--Esta configuración del runtime de .net es importante pues se habilitan para una aplicación tipo servidor y concurrente-->
    <gcServer enabled="false" />
  </runtime>
  <connectionStrings>
    <add name="EngineDatabase" connectionString="Data Source=OSCARCANEK-PC;Initial Catalog=EngineDatabase;Integrated Security=SSPI;" providerName="System.Data.SqlClient"/>
  </connectionStrings>
</configuration>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Integra.Vision.Engine.Host.Configuration
{
    
    
    /// <summary>
    /// The HostingConfigurationSection Configuration Section.
    /// </summary>
    public partial class HostingConfigurationSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the HostingConfigurationSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HostingConfigurationSectionSectionName = "hostingConfigurationSection";
        
        /// <summary>
        /// The XML path of the HostingConfigurationSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HostingConfigurationSectionSectionPath = "EngineConfigurationSectionGroup/hostingConfigurationSection";
        
        /// <summary>
        /// Gets the HostingConfigurationSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public static global::Integra.Vision.Engine.Host.Configuration.HostingConfigurationSection Instance
        {
            get
            {
                return ((global::Integra.Vision.Engine.Host.Configuration.HostingConfigurationSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Integra.Vision.Engine.Host.Configuration.HostingConfigurationSection.HostingConfigurationSectionSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Host.Configuration.HostingConfigurationSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Integra.Vision.Engine.Host.Configuration.HostingConfigurationSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Bootstrap Property
        /// <summary>
        /// The XML name of the <see cref="Bootstrap"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string BootstrapPropertyName = "bootstrap";
        
        /// <summary>
        /// Gets or sets the Bootstrap.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Bootstrap.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Host.Configuration.HostingConfigurationSection.BootstrapPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElementCollection Bootstrap
        {
            get
            {
                return ((global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElementCollection)(base[global::Integra.Vision.Engine.Host.Configuration.HostingConfigurationSection.BootstrapPropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Host.Configuration.HostingConfigurationSection.BootstrapPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Host.Configuration
{
    
    
    /// <summary>
    /// The DependenciesConfigurationElement Configuration Element.
    /// </summary>
    public partial class DependenciesConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Aliases Property
        /// <summary>
        /// The XML name of the <see cref="Aliases"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string AliasesPropertyName = "aliases";
        
        /// <summary>
        /// Gets or sets the Aliases.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Aliases.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Host.Configuration.DependenciesConfigurationElement.AliasesPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElementCollection Aliases
        {
            get
            {
                return ((global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElementCollection)(base[global::Integra.Vision.Engine.Host.Configuration.DependenciesConfigurationElement.AliasesPropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Host.Configuration.DependenciesConfigurationElement.AliasesPropertyName] = value;
            }
        }
        #endregion
        
        #region Registers Property
        /// <summary>
        /// The XML name of the <see cref="Registers"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string RegistersPropertyName = "registers";
        
        /// <summary>
        /// Gets or sets the Registers.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Registers.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Host.Configuration.DependenciesConfigurationElement.RegistersPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElementCollection Registers
        {
            get
            {
                return ((global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElementCollection)(base[global::Integra.Vision.Engine.Host.Configuration.DependenciesConfigurationElement.RegistersPropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Host.Configuration.DependenciesConfigurationElement.RegistersPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Host.Configuration
{
    
    
    /// <summary>
    /// The AliasConfigurationElement Configuration Element.
    /// </summary>
    public partial class AliasConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement.NamePropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Type Property
        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement.TypePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Type
        {
            get
            {
                return ((string)(base[global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement.TypePropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement.TypePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Host.Configuration
{
    
    
    /// <summary>
    /// The RegisterConfigurationElement Configuration Element.
    /// </summary>
    public partial class RegisterConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement.NamePropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Alias Property
        /// <summary>
        /// The XML name of the <see cref="Alias"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string AliasPropertyName = "alias";
        
        /// <summary>
        /// Gets or sets the Alias.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Alias.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement.AliasPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Alias
        {
            get
            {
                return ((string)(base[global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement.AliasPropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement.AliasPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Host.Configuration
{
    
    
    /// <summary>
    /// The ModuleConfigurationElement Configuration Element.
    /// </summary>
    public partial class ModuleConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement.NamePropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Type Property
        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement.TypePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Type
        {
            get
            {
                return ((string)(base[global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement.TypePropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement.TypePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Host.Configuration
{
    
    
    /// <summary>
    /// A collection of ModuleConfigurationElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap, AddItemName="module", RemoveItemName="remove", ClearItemsName="clear")]
    public partial class ModuleConfigurationElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ModuleConfigurationElementPropertyName = "controllerConfigurationElement";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElementCollection.ModuleConfigurationElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElementCollection.ModuleConfigurationElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement this[int index]
        {
            get
            {
                return ((global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement this[object name]
        {
            get
            {
                return ((global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="controllerConfigurationElement">The <see cref="global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement controllerConfigurationElement)
        {
            base.BaseAdd(controllerConfigurationElement);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="controllerConfigurationElement">The <see cref="global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement controllerConfigurationElement)
        {
            base.BaseRemove(this.GetElementKey(controllerConfigurationElement));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement GetItemAt(int index)
        {
            return ((global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement GetItemByKey(string name)
        {
            return ((global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region EngineBuilderType Property
        /// <summary>
        /// The XML name of the <see cref="EngineBuilderType"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string EngineBuilderTypePropertyName = "engineBuilderType";
        
        /// <summary>
        /// Gets or sets the EngineBuilderType.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The EngineBuilderType.")]
        [global::System.Configuration.StringValidatorAttribute(InvalidCharacters="", MaxLength=2147483647, MinLength=0)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElementCollection.EngineBuilderTypePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string EngineBuilderType
        {
            get
            {
                return ((string)(base[global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElementCollection.EngineBuilderTypePropertyName]));
            }
            set
            {
                base[global::Integra.Vision.Engine.Host.Configuration.ModuleConfigurationElementCollection.EngineBuilderTypePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Host.Configuration
{
    
    
    /// <summary>
    /// A collection of AliasConfigurationElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap, AddItemName="alias", RemoveItemName="remove", ClearItemsName="clear")]
    public partial class AliasConfigurationElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string AliasConfigurationElementPropertyName = "aliasConfigurationElement";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElementCollection.AliasConfigurationElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElementCollection.AliasConfigurationElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement this[int index]
        {
            get
            {
                return ((global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement this[object name]
        {
            get
            {
                return ((global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="aliasConfigurationElement">The <see cref="global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement aliasConfigurationElement)
        {
            base.BaseAdd(aliasConfigurationElement);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="aliasConfigurationElement">The <see cref="global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement aliasConfigurationElement)
        {
            base.BaseRemove(this.GetElementKey(aliasConfigurationElement));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement GetItemAt(int index)
        {
            return ((global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement GetItemByKey(string name)
        {
            return ((global::Integra.Vision.Engine.Host.Configuration.AliasConfigurationElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Integra.Vision.Engine.Host.Configuration
{
    
    
    /// <summary>
    /// A collection of RegisterConfigurationElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap, AddItemName="register", RemoveItemName="remove", ClearItemsName="clear")]
    public partial class RegisterConfigurationElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string RegisterConfigurationElementPropertyName = "registerConfigurationElement";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElementCollection.RegisterConfigurationElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElementCollection.RegisterConfigurationElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement this[int index]
        {
            get
            {
                return ((global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement this[object name]
        {
            get
            {
                return ((global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="registerConfigurationElement">The <see cref="global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement registerConfigurationElement)
        {
            base.BaseAdd(registerConfigurationElement);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="registerConfigurationElement">The <see cref="global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement registerConfigurationElement)
        {
            base.BaseRemove(this.GetElementKey(registerConfigurationElement));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement GetItemAt(int index)
        {
            return ((global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement GetItemByKey(string name)
        {
            return ((global::Integra.Vision.Engine.Host.Configuration.RegisterConfigurationElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}

<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlreadyInstalledService" xml:space="preserve">
    <value>The service is already installed or has been marked for deletion.</value>
  </data>
  <data name="AppConfigApply" xml:space="preserve">
    <value>Applying the configuration file to: '{0}'</value>
  </data>
  <data name="AppConfigFileNotFound" xml:space="preserve">
    <value>Application configuration file not found. File not found: '{0}'</value>
  </data>
  <data name="AppConfigInvalid" xml:space="preserve">
    <value>The configuration file '{0}' is not valid.</value>
  </data>
  <data name="AppConfigRestore" xml:space="preserve">
    <value>Restoring the configuration file to: '{0}'</value>
  </data>
  <data name="CannotResolveType" xml:space="preserve">
    <value>Can't resolve type '{0}'.</value>
  </data>
  <data name="ConsoleArgDescription" xml:space="preserve">
    <value>[ -c | -console ]		Run as a console application.</value>
  </data>
  <data name="EngineAppConfigFileName" xml:space="preserve">
    <value>Integra.Vision.Engine.dll.config</value>
  </data>
  <data name="EntryPointPathArgDescription" xml:space="preserve">
    <value>[ -p | -path ]			Entry point path.</value>
  </data>
  <data name="FileLoadError" xml:space="preserve">
    <value>Unable to load the file '{0}' into the current AppDomain.</value>
  </data>
  <data name="HelpArgDescription" xml:space="preserve">
    <value>[ -h | -help | -? ]		Display list of arguments</value>
  </data>
  <data name="HostingConfigurationSection" xml:space="preserve">
    <value>integra.vision.engine/hosting</value>
  </data>
  <data name="InstallArgDescription" xml:space="preserve">
    <value>[ -i | -install ]		Install as a Windows Service.</value>
  </data>
  <data name="InstalledServiceMessage" xml:space="preserve">
    <value>Integra Vision Engine installation has completed.</value>
  </data>
  <data name="InstallingServiceMessage" xml:space="preserve">
    <value>Installing Integra Vision Engine service...</value>
  </data>
  <data name="InsufficientAccessPermission" xml:space="preserve">
    <value>The requested operation requires elevation.</value>
  </data>
  <data name="InvalidArguments" xml:space="preserve">
    <value>Invalid arguments. Parsing error.</value>
  </data>
  <data name="InvalidAssemblyBuilder" xml:space="preserve">
    <value>Assembly builder is a invalid reference.</value>
  </data>
  <data name="InvalidAssemblyModule" xml:space="preserve">
    <value>Assembly module is a invalid reference.</value>
  </data>
  <data name="InvalidEngineBuilderRef" xml:space="preserve">
    <value>Reference to the engine builder is invalid.</value>
  </data>
  <data name="InvalidPathArgument" xml:space="preserve">
    <value>Path argument invalid. Must be a valid directory.</value>
  </data>
  <data name="InvalidTypeResolver" xml:space="preserve">
    <value>Invalid type for dependency resolver.</value>
  </data>
  <data name="NoActionTaken" xml:space="preserve">
    <value>No action has been taken. Use the argument -h to display help information.</value>
  </data>
  <data name="NotInstalledService" xml:space="preserve">
    <value>The service is not installed.</value>
  </data>
  <data name="OnlyOneActionAllowed" xml:space="preserve">
    <value>Invalid arguments, only one action is allowed.</value>
  </data>
  <data name="RuntimeObjectWrapperInvocationException" xml:space="preserve">
    <value>An error ocurred on object wrapper invocation. Type: '{0}' Method: '{1}' Exception: '{2}'</value>
  </data>
  <data name="ServiceAlreadyStarted" xml:space="preserve">
    <value>The service is already running.</value>
  </data>
  <data name="ServiceAlreadyStopped" xml:space="preserve">
    <value>The service is already stopped.</value>
  </data>
  <data name="ServiceDescription" xml:space="preserve">
    <value>Permite procesar, analizar y notificar eventos en tiempo real.</value>
  </data>
  <data name="ServiceDisplayName" xml:space="preserve">
    <value>Integra Vision Engine</value>
  </data>
  <data name="ServiceName" xml:space="preserve">
    <value>Integra Vision Engine</value>
  </data>
  <data name="ServiceNotStarted" xml:space="preserve">
    <value>The service cannot start because it is in '{0}' state.</value>
  </data>
  <data name="ServiceNotStartedTimeout" xml:space="preserve">
    <value>The service could not be started. Check the eventlog for more details.</value>
  </data>
  <data name="ServiceStarted" xml:space="preserve">
    <value>The service has started.</value>
  </data>
  <data name="ServiceStopped" xml:space="preserve">
    <value>The service has stopped.</value>
  </data>
  <data name="StartArgDescription" xml:space="preserve">
    <value>[ -s | -start ]			Start or install and start the service.</value>
  </data>
  <data name="StopServiceMessage" xml:space="preserve">
    <value>Press enter to end ...</value>
  </data>
  <data name="TraceListenerBaseTraceMessageFormat" xml:space="preserve">
    <value>{0}, relatedActivityId={1}</value>
  </data>
  <data name="UnableBuildEngine" xml:space="preserve">
    <value>Unable to build the Integra Vision Engine. For more information lookup in the systems logs.</value>
  </data>
  <data name="UnableCreateInstanceOf" xml:space="preserve">
    <value>Could not create the instance of the type required as ´{0}'</value>
  </data>
  <data name="UnableToAbortModule" xml:space="preserve">
    <value>Unable to abort the Integra Vision Engine Module reference as '{0}'. For more information lookup in the systems logs.</value>
  </data>
  <data name="UnableToBuildModule" xml:space="preserve">
    <value>Unable to build the Integra Vision Engine Module reference as '{0}'. For more information lookup in the systems logs.</value>
  </data>
  <data name="UnableToStartModule" xml:space="preserve">
    <value>Unable to start the Integra Vision Engine Module reference as '{0}'. For more information lookup in the systems logs.</value>
  </data>
  <data name="UnableToStopModule" xml:space="preserve">
    <value>Unable to stop the Integra Vision Engine Module reference as '{0}'. For more information lookup in the systems logs.</value>
  </data>
  <data name="UninstallArgDescription" xml:space="preserve">
    <value>[ -u | -uninstall ]		Uninstall the Windows Service.</value>
  </data>
  <data name="UninstalledServiceMessage" xml:space="preserve">
    <value>Integra Vision Engine uninstallation has completed.</value>
  </data>
  <data name="UninstallingServiceMessage" xml:space="preserve">
    <value>Uninstalling Integra Vision Engine service...</value>
  </data>
  <data name="UnresolvedBootstrapImpl" xml:space="preserve">
    <value>Could not resolve the bootstrap implementation class.</value>
  </data>
  <data name="UnresolvedDepedencyResolverImpl" xml:space="preserve">
    <value>Could not resolve the dependency resolver implementation class.</value>
  </data>
  <data name="UnresolvedDependency" xml:space="preserve">
    <value>Could not resolve the dependency required as '{0}'</value>
  </data>
  <data name="UnresolvedModuleDependency" xml:space="preserve">
    <value>Could not resolve the module dependency required as '{0}'</value>
  </data>
</root>